name: Required Approvals

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, edited, review_requested, review_request_removed, ready_for_review, reopened]
  pull_request_review:
    types: [submitted, edited, dismissed]
  workflow_dispatch:
    inputs:
      directory:
        description: 'Directory to check for changes'
        required: true
        default: 'src/**/*'
      required-approvals:
        description: 'Number of required approvals'
        required: true
        default: 1

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  check-approvals:
    runs-on: ubuntu-latest
    env:
      DIRECTORY: ${{ github.event.inputs.directory || 'src/**/*' }}
      REQUIRED_APPROVALS: ${{ github.event.inputs['required-approvals'] || 1 }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get list of files changed in the PR
        id: changed_files
        run: |
          files=$(jq -r --arg dir "$DIRECTORY" '.[] | select(.filename | test($dir)) | .filename' <(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files))
          echo "Files changed in PR: $files"
          echo "::set-output name=files::$files"

      - name: Check if changes are in specified directory
        id: check_changes
        run: |
          if [ -z "${{ steps.changed_files.outputs.files }}" ]; then
            echo "No changes in specified directory"
            echo "::set-output name=changes_in_directory::false"
          else
            echo "Changes detected in specified directory"
            echo "::set-output name=changes_in_directory::true"
          fi

      - name: Get pull request reviews
        if: steps.check_changes.outputs.changes_in_directory == 'true'
        id: get_reviews
        run: |
          reviews=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews)
          echo "Reviews: $reviews"
          echo "::set-output name=reviews::$reviews"

      - name: Debug reviews output
        if: steps.check_changes.outputs.changes_in_directory == 'true'
        run: |
          echo "Reviews output:"
          echo "${{ steps.get_reviews.outputs.reviews }}"

      - name: Count approvals
        if: steps.check_changes.outputs.changes_in_directory == 'true'
        id: count_approvals
        run: |
          if [ -z "${{ steps.get_reviews.outputs.reviews }}" ] || [ "${{ steps.get_reviews.outputs.reviews }}" == "[]" ]; then
            echo "No reviews found."
            echo "::set-output name=approvals::0"
          else
            approvals=$(echo ${{ steps.get_reviews.outputs.reviews }} | jq -r '[.[] | select(.state=="APPROVED")] | length')
            echo "Number of approvals: $approvals"
            echo "::set-output name=approvals::$approvals"
          fi

      - name: Check required approvals
        if: steps.check_changes.outputs.changes_in_directory == 'true'
        id: check_required_approvals
        run: |
          required_approvals="${{ env.REQUIRED_APPROVALS }}"
          if [ ${{ steps.count_approvals.outputs.approvals }} -lt $required_approvals ]; then
            echo "Required approvals not met. Approvals: ${{ steps.count_approvals.outputs.approvals }}"
            exit 1
          else
            echo "Required approvals met. Approvals: ${{ steps.count_approvals.outputs.approvals }}"
          fi

      - name: Set status check to success if no changes in specified directory
        if: steps.check_changes.outputs.changes_in_directory == 'false'
        run: |
          curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"state": "success", "context": "Required Approvals", "description": "No changes in specified directory. No approvals required."}' \
          https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}

      - name: Set status check based on required approvals
        if: steps.check_changes.outputs.changes_in_directory == 'true'
        run: |
          required_approvals="${{ env.REQUIRED_APPROVALS }}"
          if [ ${{ steps.count_approvals.outputs.approvals }} -lt $required_approvals ]; then
            curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"state": "failure", "context": "Required Approvals", "description": "Required approvals not met. Approvals: '"${{ steps.count_approvals.outputs.approvals }}"'"}' \
            https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}
          else
            curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"state": "success", "context": "Required Approvals", "description": "Required approvals met. Approvals: '"${{ steps.count_approvals.outputs.approvals }}"'"}' \
            https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}
